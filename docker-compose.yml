version: '3.8'

networks:
  fullstack:

volumes:
  redis: # for redis
  pgdata: # for database
  gem_cache: # for gems
  shared_data: # for data shared between all the images

services:
  db_postgresql:
    image: postgres:14.5
    container_name: db_postgresql
    volumes:
      - pgdata:/var/lib/postgresql/data
      - shared_data:/var/shared
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456789
    ports:
      - '5432:5432'

  redis:
    image: redis
    command: redis-server
    ports:
      - '6379:6379'
    volumes:
      - 'redis:/data'

  sidekiq:
    depends_on:
      - db_postgresql
      - redis
      - rails_api
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - .:/var/app
      - gem_cache:/usr/local/bundle/gems
    environment:
      REDIS_URL_SIDEKIQ: redis://redis:6379/12

  rails_api:
    build:
      context: . # present working directory
      dockerfile: Dockerfile
    container_name: real_fevr_api_fullstack
    volumes:
      # set the bind mount for /var/app to the present directory in local file system
      # with this bind mount in place we can change the source code for the rails application
      # in the present directory and it will map the var app directory in the docker container
      - .:/var/app
      # map the shared data
      - shared_data:/var/shared
      # map the gem cache
      - gem_cache:/usr/local/bundle/gems
    ports:
      - '3000:3000'
    # tty and stdin_open are analogous to the -t and -i arguments for the docker run
    # stdin_open used when is needed to work on a project outside docker container
    # tty used when is needed to work on a project inside the docker container
    # in the end, it enables us to debug the app with byebug
    stdin_open: true
    tty: true
    env_file: .env.development
    # define startup script
    entrypoint: ['sh', 'entrypoints/dev-docker-entrypoint.sh']
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    links:
      - db_postgresql
      - redis
    environment:
      RAILS_ENV: development
      REDIS_URL_SIDEKIQ: redis://redis:6379/12
    depends_on:
      - db_postgresql
      - redis

  # Front-end
  client_angular:
    build:
      context: ./angular
      dockerfile: Dockerfile.dev
    container_name: real_fevr_client_fullstack
    ports:
      - 4200:4200
    command: >
      sh -c "ng serve --host 0.0.0.0"
    volumes:
      - /app/node_modules
      - ./angular:/usr/app/
    environment:
      CHOKIDAR_USEPOLLING: 'true'
    depends_on:
      - rails_api
