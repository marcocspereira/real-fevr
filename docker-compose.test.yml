# docker-compose -f docker-compose.test.yml up
version: '3.8'

volumes:
  redis: # for redis
  pgdata: # for database
  gem_cache: # for gems
  shared_data: # for data shared between all the images

services:
  db_postgresql:
    image: postgres:14.5
    container_name: db_postgresql
    volumes:
      - pgdata:/var/lib/postgresql/data
      - shared_data:/var/shared
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456789
    ports:
      - 5432:5432

  redis:
    image: redis
    command: redis-server
    ports:
      - '6379:6379'
    volumes:
      - 'redis:/data'

  sidekiq:
    depends_on:
      - db_postgresql
      - redis
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - .:/var/app
      - gem_cache:/usr/local/bundle/gems
    environment:
      REDIS_URL_SIDEKIQ: redis://redis:6379/12

  real_fevr_test:
    # use image from before (development)
    # docker by default prefixes the directory name
    image: real-fevr-real_fevr_api
    container_name: real_fevr_test
    volumes:
      - .:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    ports:
      - 3001:3001
    stdin_open: true
    tty: true
    env_file: .env.test
    entrypoint: ['sh', 'entrypoints/test-docker-entrypoint.sh']
    # container exit once it comes up, so we just use it to run test suite
    command: ['rspec']
    environment:
      RAILS_ENV: test
    depends_on:
      - db_postgresql
